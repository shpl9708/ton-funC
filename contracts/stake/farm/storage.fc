global int storage::nonce;
global slice storage::factory_address;
global slice storage::operator_address;
global int storage::start_date;
global int storage::end_date;
global slice storage::token_address;
global slice storage::reward_address;
global int storage::reward_amount;

() load_storage() impure inline {

    slice ds = get_data().begin_parse();

    storage::nonce = ds~load_uint(64);
    storage::factory_address = ds~load_msg_addr();
    storage::operator_address = ds~load_msg_addr();
    storage::start_date = ds~load_uint(32);
    storage::end_date = ds~load_uint(32);
    
    cell ds_0 = ds~load_ref(); 

    slice ti = ds_0.begin_parse();
    storage::token_address = ti~load_msg_addr();
    storage::reward_address = ti~load_msg_addr();
    storage::reward_amount = ti~load_coins();
    ;; storage::token_address = ds~load_msg_addr();
    ;; storage::reward_address = ds~load_msg_addr();
    ;; storage::reward_amount = ds~load_coins();
}

() save_storage() impure inline {
    cell token_info = begin_cell()
                        .store_slice(storage::token_address)
                        .store_slice(storage::reward_address)
                        .store_coins(storage::reward_amount)
                        .end_cell();
    set_data(
        begin_cell()
            .store_uint(storage::nonce, 64)
            .store_slice(storage::factory_address)
            .store_slice(storage::operator_address)
            .store_uint(storage::start_date, 32)
            .store_uint(storage::end_date, 32)
            .store_ref(token_info)
        .end_cell()
    );
}